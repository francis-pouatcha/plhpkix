
# KeyStoreWraper can not verify chain
KeyStoreWraper.certImport.invalidSignature.title = Exception Importing Key Chain. Invalid Key Chain.
KeyStoreWraper.certImport.invalidSignature.text = KeyStoreWraper: Signature of Certificate with subject {0} and issuer {1} and serial number {2} could not be verified by using proposed signing certificate with serial number {3}.
KeyStoreWraper.certImport.invalidSignature.summary = KeyStoreWraper: Signature of Certificate with subject {0} and issuer {1} and serial number {2} not valid.
KeyStoreWraper.certImport.invalidSignature.details = KeyStoreWraper: Signature of Certificate with subject {0} and issuer {1} and serial number {2} could not be verified by the proposed signing certificate with serial number {3}.

# KeyStoreWraper can not verify chain
KeyStoreWraper.certImport.invalidCertificate.title = Exception Importing Key Chain. Invalid Key Chain.
KeyStoreWraper.certImport.invalidCertificate.text = KeyStoreWraper: Certificate with subject {0} and issuer {1} and serial number {2} not valid.
KeyStoreWraper.certImport.invalidCertificate.summary = KeyStoreWraper: Certificate with subject {0} and issuer {1} and serial number {2} not valid.
KeyStoreWraper.certImport.invalidCertificate.details = KeyStoreWraper: Certificate with subject {0} and issuer {1} and serial number {2} not valid.

# KeyStoreWraper can not import certificate
KeyStoreWraper.certImport.keystoreException.title = Exception writing to key store.
KeyStoreWraper.certImport.keystoreException.text = KeyStoreWraper: There was a {2} importing certificate: {0}.
KeyStoreWraper.certImport.keystoreException.summary = KeyStoreWraper: There was a {2} importing certificate: {0}.
KeyStoreWraper.certImport.keystoreException.details = KeyStoreWraper: There was a {2} importing certificate: {0}.

# KeyStoreWraper can not verify signature
KeyStoreWraper.certImport.certException.title = Exception verifying signature while importing Key Chain.
KeyStoreWraper.certImport.certException.text = KeyStoreWraper: There was a {2} verifying signature: {0}.
KeyStoreWraper.certImport.certException.summary = KeyStoreWraper: There was a {2} verifying signature: {0}.
KeyStoreWraper.certImport.certException.details = KeyStoreWraper: There was a {2} verifying signature: {0}.

# KeyStoreWraper can not verify signature
KeyStoreWraper.certImport.generalCertificateException.title = Exception reading certificate.
KeyStoreWraper.certImport.generalCertificateException.text = KeyStoreWraper: There was a {2} reading certificate: {0}.
KeyStoreWraper.certImport.generalCertificateException.summary = KeyStoreWraper: There was a {2} reading certificate: {0}.
KeyStoreWraper.certImport.generalCertificateException.details = KeyStoreWraper: There was a {2} reading certificate: {0}.


KeyStoreWraper.certImport.missingPrivateKeyEntry.title = Exception importing issued certificate. Missing private key.
KeyStoreWraper.certImport.missingPrivateKeyEntry.text = KeyStoreWraper: PrivateKey entry of issued certificate with subject {0} and issuer {1} and serial number {2} no longer in key store.
KeyStoreWraper.certImport.missingPrivateKeyEntry.summary = KeyStoreWraper: PrivateKey entry of issued certificate with subject {0} and issuer {1} and serial number {2} no longer in key store.
KeyStoreWraper.certImport.missingPrivateKeyEntry.details = KeyStoreWraper: PrivateKey entry of issued certificate with subject {0} and issuer {1} and serial number {2} no longer in key store.

// Reading keystore
KeyStoreWraper.read.keystoreException.title = Exception reading from key store.
KeyStoreWraper.read.keystoreException.text = KeyStoreWraper: There was a {2} reading from key store: {0}.
KeyStoreWraper.read.keystoreException.summary = KeyStoreWraper: There was a {2} reading from key store: {0}.
KeyStoreWraper.read.keystoreException.details = KeyStoreWraper: There was a {2} reading from key store: {0}.

// KeyAliasUtils.cn.addressException
// Reading keystore
KeyAliasUtils.cn.addressException.title = Error extracting common name from certificate.
KeyAliasUtils.cn.addressException.text = KeyStoreWraper: There was a {2} extracting common name from certificate: {0}. Expecting either a valid email address or a common name.
KeyAliasUtils.cn.addressException.summary = KeyStoreWraper: There was a {2} extracting common name from certificate: {0}.
KeyAliasUtils.cn.addressException.details = KeyStoreWraper: There was a {2} extracting common name from certificate: {0}. Expecting either a valid email address or a common name.

# KeyStoreWraper can not verify signature
V3CertificateUtils.read.generalCertificateException.title = Exception reading certificate.
V3CertificateUtils.read.generalCertificateException.text = V3CertificateUtils: There was a {2} reading certificate: {0}.
V3CertificateUtils.read.generalCertificateException.summary = V3CertificateUtils: There was a {2} reading certificate: {0}.
V3CertificateUtils.read.generalCertificateException.details = V3CertificateUtils: There was a {2} reading certificate: {0}.

# KeyStoreWraper can not verify chain
V3CertificateUtils.read.invalidCertificate.title = Exception Importing Key Chain. Invalid Key Chain.
V3CertificateUtils.read.invalidCertificate.text = V3CertificateUtils: Certificate with subject {0} and issuer {1} and serial number {2} not valid.
V3CertificateUtils.read.invalidCertificate.summary = V3CertificateUtils: Certificate with subject {0} and issuer {1} and serial number {2} not valid.
V3CertificateUtils.read.invalidCertificate.details = V3CertificateUtils: Certificate with subject {0} and issuer {1} and serial number {2} not valid.

X509CertificateBuilder.missing.inputs = Missing inputs for certification
X509CertificateBuilder.missing.subjectPublicKey.text = X509CertificateBuilder: Missing inputs for certification. See associated error list. 
X509CertificateBuilder.missing.subjectPublicKey.summary = X509CertificateBuilder: Missing inputs for certification. See associated error list.
X509CertificateBuilder.missing.subjectPublicKey.details = X509CertificateBuilder: Missing inputs for certification. See associated error list.

X509CertificateBuilder.missing.subjectPublicKey.title = Missing subject public key for certification
X509CertificateBuilder.missing.subjectPublicKey.text = X509CertificateBuilder: Missing subject public key for certification. See X509CertificateBuilder for details. 
X509CertificateBuilder.missing.subjectPublicKey.summary = X509CertificateBuilder: Missing subject public key for certification. See X509CertificateBuilder for details.
X509CertificateBuilder.missing.subjectPublicKey.details = X509CertificateBuilder: Missing subject public key for certification. See X509CertificateBuilder for details.

X509CertificateBuilder.missing.subjectDN.title = Missing subject distinguished name for certification
X509CertificateBuilder.missing.subjectDN.text = X509CertificateBuilder: Missing subject distinguished name for certification. See X509CertificateBuilder for details. 
X509CertificateBuilder.missing.subjectDN.summary = X509CertificateBuilder: Missing subject distinguished name for certification. See X509CertificateBuilder for details.
X509CertificateBuilder.missing.subjectDN.details = X509CertificateBuilder: Missing subject distinguished name for certification. See X509CertificateBuilder for details.

X509CertificateBuilder.missing.validityDate.notBefore.title = Missing validity date (not before) for certification
X509CertificateBuilder.missing.validityDate.notBefore.text = X509CertificateBuilder: Missing validity date (not before) for certification. See X509CertificateBuilder for details. 
X509CertificateBuilder.missing.validityDate.notBefore.summary = X509CertificateBuilder: Missing validity date (not before) for certification. See X509CertificateBuilder for details.
X509CertificateBuilder.missing.validityDate.notBefore.details = X509CertificateBuilder: Missing validity date (not before) for certification. See X509CertificateBuilder for details.

X509CertificateBuilder.missing.validityDate.notAfter.title = Missing validity date (not after) for certification
X509CertificateBuilder.missing.validityDate.notAfter.text = X509CertificateBuilder: Missing validity date (not after) for certification. See X509CertificateBuilder for details. 
X509CertificateBuilder.missing.validityDate.notAfter.summary = X509CertificateBuilder: Missing validity date (not after) for certification. See X509CertificateBuilder for details.
X509CertificateBuilder.missing.validityDate.notAfter.details = X509CertificateBuilder: Missing validity date (not after) for certification. See X509CertificateBuilder for details.

X509CertificateBuilder.issuerCert.invalid.title = Exception issuing certificate: Issuer certificate not a valid CA certificate
X509CertificateBuilder.issuerCert.invalid.text = X509CertificateBuilder: Issuer certificate not a valid CA certificate. See associated error list.
X509CertificateBuilder.issuerCert.invalid.summary = X509CertificateBuilder: Issuer certificate not a valid CA certificate. See associated error list.
X509CertificateBuilder.issuerCert.invalid.details = X509CertificateBuilder: Issuer certificate not a valid CA certificate. See associated error list.

X509CertificateBuilder.issuerCer.notForCertSign.title = Exception issuing certificate: Missing key usage in CA certificate
X509CertificateBuilder.issuerCer.notForCertSign.text = X509CertificateBuilder: Missing key usage in CA certificate. Check key usage extension RFC 5280 #4.2.1.12 and RFC 5750 #4.4.4.
X509CertificateBuilder.issuerCer.notForCertSign.summary = X509CertificateBuilder: Missing key usage in CA certificate. Check key usage extension RFC 5280 #4.2.1.12 and RFC 5750 #4.4.4.
X509CertificateBuilder.issuerCer.notForCertSign.details = X509CertificateBuilder: Missing key usage in CA certificate. Check key usage extension RFC 5280 #4.2.1.12 and RFC 5750 #4.4.4.

X509CertificateBuilder.issuerCert.notCaCert.title = Exception issuing certificate: Issuer certificate not a CA certificate
X509CertificateBuilder.issuerCert.notCaCert.text = X509CertificateBuilder: Issuer certificate not a CA certificate. Check basic constraint extension RFC 5280 #4.2.1.9.
X509CertificateBuilder.issuerCert.notCaCert.summary = X509CertificateBuilder: Issuer certificate not a CA certificate. Check basic constraint extension RFC 5280 #4.2.1.9.
X509CertificateBuilder.issuerCert.notCaCert.details = X509CertificateBuilder: Issuer certificate not a CA certificate. Check basic constraint extension RFC 5280 #4.2.1.9.








# Signature valid
SignedMailValidator.sigValid.title = Signature valid
SignedMailValidator.sigValid.text = Signature valid
SignedMailValidator.sigValid.summary = Signature valid
SignedMailValidator.sigValid.details = Signature valid

# Signature invalid
SignedMailValidator.sigInvalid.title = Signature invalid
SignedMailValidator.sigInvalid.text = Signature invalid
SignedMailValidator.sigInvalid.summary = Signature invalid
SignedMailValidator.sigInvalid.details = Signature invalid

# message is not signed
SignedMailValidator.noSignedMessage.title = Message is not signed
SignedMailValidator.noSignedMessage.text = SignedMailValidator: MimeMessage message is not a signed message.
SignedMailValidator.noSignedMessage.summary = SignedMailValidator: MimeMessage message is not a signed message.
SignedMailValidator.noSignedMessage.details = SignedMailValidator: MimeMessage message is not a signed message.

# exception reading the Mime message
# {0} message of the underlying exception
# {1} the underlying exception
# {2} the name of the exception
SignedMailValidator.exceptionReadingMessage.title = Exception reading the MimeMessage
SignedMailValidator.exceptionReadingMessage.text = SignedMailValidator: there was a {2} reading the MimeMessage: {0}.
SignedMailValidator.exceptionReadingMessage.summary = SignedMailValidator: there was a {2} reading the MimeMessage: {0}.
SignedMailValidator.exceptionReadingMessage.details = SignedMailValidator: there was a {2} reading the MimeMessage: {0}.

## exception messages

# signer has not signed the mail message
SignedMailValidator.wrongSigner.title = Signer has not signed the message
SignedMailValidator.wrongSigner.text = The given signer did not sign the mail message.
SignedMailValidator.wrongSigner.summary = The given signer did not sign the mail message.
SignedMailValidator.wrongSigner.details = The given signer did not sign the mail message.

## notifications messages

# short signing key
# {0} the key lenght as Integer
SignedMailValidator.shortSigningKey.title = Careless short signing key
SignedMailValidator.shortSigningKey.text = Warning: The signing key is only {0} bits long.
SignedMailValidator.shortSigningKey.summary = Warning: The signing key is only {0} bits long.
SignedMailValidator.shortSigningKey.details = Warning: The signing key is only {0} bits long.

# signing certificate has very long validity period
# {0} notBefore date
# {1} notAfter date
SignedMailValidator.longValidity.title = Very long validity period
SignedMailValidator.longValidity.text = Warning: The signing certificate has a very long validity period: from {0,date} {0,time,full} until {1,date} {1,time,full}.
SignedMailValidator.longValidity.summary = Warning: The signing certificate has a very long validity period: from {0,date} {0,time,full} until {1,date} {1,time,full}.
SignedMailValidator.longValidity.details = Warning: The signing certificate has a very long validity period: from {0,date} {0,time,full} until {1,date} {1,time,full}.

# signed receipt requested
SignedMailValidator.signedReceiptRequest.title = Signed Receipt Request
SignedMailValidator.signedReceiptRequest.text = The signature contains a signed receipt request.
SignedMailValidator.signedReceiptRequest.summary = The signature contains a signed receipt request.
SignedMailValidator.signedReceiptRequest.details = The signature contains a signed receipt request as per RFC 2634.

## error messages

# no signer certificate found
SignedMailValidator.noSignerCert.title = No signer certificate found
SignedMailValidator.noSignerCert.text = Signature Validation failed: No signer certificate found.
SignedMailValidator.noSignerCert.summary = Signature Validation failed: No signer certificate found.
SignedMailValidator.noSignerCert.details = Signature Validation failed: No signer certificate found.

# certificate contains no email address
SignedMailValidator.noEmailInCert.title = Certificate not usable for email signatures
SignedMailValidator.noEmailInCert.text = The signer certificate is not usable for email signatures: it contains no email address.
SignedMailValidator.noEmailInCert.summary = The signer certificate is not usable for email signatures: it contains no email address.
SignedMailValidator.noEmailInCert.details = The signer certificate is not usable for email signatures: it contains no email address.

# certificate email address does not match from email address
# {0} from email addresses in the message 
# {1} email addresses in the certificate
SignedMailValidator.emailFromCertMismatch.title = Email address mismatch
SignedMailValidator.emailFromCertMismatch.text = Email address in singer certificate does not match the sender address. Signer email: {1}. Sender email: {0}.
SignedMailValidator.emailFromCertMismatch.summary = Email address in singer certificate does not match the sender address. Signer email: {1}. Sender email: {0}.
SignedMailValidator.emailFromCertMismatch.details = Email address in singer certificate does not match the sender address. Signer email: {1}. Sender email: {0}.

# exception extracting email addresses from certificate
# {0} message of the underlying exception
# {1} the underlying exception
# {2} the name of the exception
SignedMailValidator.certGetEmailError.title = Exception extracting email addresses from certificate
SignedMailValidator.certGetEmailError.text = There was a {2} extracting the email addresses from the certificate. Cause: {0}.
SignedMailValidator.certGetEmailError.summary = There was a {2} extracting the email addresses from the certificate.
SignedMailValidator.certGetEmailError.details = There was a {2} extracting the email addresses from the certificate. Cause: {0}.

# no signing time found
SignedMailValidator.noSigningTime.title = No signing time
SignedMailValidator.noSigningTime.text = The signature contains no signing time. Using the current time for validating the certificate path.
SignedMailValidator.noSigningTime.summary = The signature contains no signing time.
SignedMailValidator.noSigningTime.details = The signature contains no signing time. Using the current time for validating the certificate path.

# expired at signing time
# {0} signing time
# {1} not after date
SignedMailValidator.certExpired.title = Certificate expired at signing time
SignedMailValidator.certExpired.text = The message was signed at {0,date} {0,time,full}. But the certificate expired at {1,date} {1,time,full}.
SignedMailValidator.certExpired.summary = The message was signed at {0,date} {0,time,full}. But the certificate expired at {1,date} {1,time,full}.
SignedMailValidator.certExpired.details = The message was signed at {0,date} {0,time,full}. But the certificate expired at {1,date} {1,time,full}.

# not yet valid at signing time
# {0} signing time
# {1} notBefore date
SignedMailValidator.certNotYetValid.title = Certificate not yet valid at signing time
SignedMailValidator.certNotYetValid.text = The message was signed at {0,date} {0,time,full}. But the certificate is not valid before {1,date} {1,time,full}.
SignedMailValidator.certNotYetValid.summary = The message was signed at {0,date} {0,time,full}. But the certificate is not valid before {1,date} {1,time,full}.
SignedMailValidator.certNotYetValid.details = The message was signed at {0,date} {0,time,full}. But the certificate is not valid before {1,date} {1,time,full}.

# exception retrieving the signer certificate
# {0} message of the underlying exception
# {1} the underlying exception
# {2} the name of the exception
SignedMailValidator.exceptionRetrievingSignerCert.title = Exception retrieving the signer certificate
SignedMailValidator.exceptionRetrievingSignerCert.text = Signature Validation failed. There was a {2} retrieving the signer certificate: {0}. 
SignedMailValidator.exceptionRetrievingSignerCert.summary = Signature Validation failed. There was a {2} retrieving the signer certificate.
SignedMailValidator.exceptionRetrievingSignerCert.details = Signature Validation failed  There was a {2} retrieving the signer certificate: {0}.

# exception verifying the signature
# {0} message of the underlying exception
# {1} the underlying exception 
# {2} the name of the exception
SignedMailValidator.exceptionVerifyingSignature.title = Signature not verified
SignedMailValidator.exceptionVerifyingSignature.text = Signature not verified. There was a {2}. Cause: {0}.
SignedMailValidator.exceptionVerifyingSignature.summary = Signature not verified. There was a {2}.
SignedMailValidator.exceptionVerifyingSignature.details = Signature not verified. There was a {2}. Cause: {0}.

# signature not verified
SignedMailValidator.signatureNotVerified.title = Signature not verified
SignedMailValidator.signatureNotVerified.text = Signature not verified. The public key of the signer does not correspond to the signature.
SignedMailValidator.signatureNotVerified.summary = Signature not verified. The public key of the signer does not correspond to the signature.
SignedMailValidator.signatureNotVerified.details = Signature not verified. The public key of the signer does not correspond to the signature.

# certificate key usage does not permit digitalSignature or nonRepudiation
SignedMailValidator.signingNotPermitted.title = Key not usable for email signatures
SignedMailValidator.signingNotPermitted.text = The key usage extension of signer certificate does not permit using the key for email signatures.
SignedMailValidator.signingNotPermitted.summary = The signer key is not usable for email signatures.
SignedMailValidator.signingNotPermitted.details = The key usage extension of signer certificate does not permit using the key for email signatures.

# certificate extended key usage does not permit emailProtection or anyExtendedKeyUsage
SignedMailValidator.extKeyUsageNotPermitted.title = Key not usable for email signatures
SignedMailValidator.extKeyUsageNotPermitted.text = The extended key usage extension of the signer certificate does not permit using the key for email signatures.
SignedMailValidator.extKeyUsageNotPermitted.summary = The signer key is not usable for email signatures.
SignedMailValidator.extKeyUsageNotPermitted.details = The extended key usage extension of the signer certificate does not permit using the key for email signatures.

# exception processing the extended key usage extension
# {0} message of the underlying exception
# {1} the underlying exception
# {2} the name of the exception
SignedMailValidator.extKeyUsageError.title = Exception processing the extended key usage extension 
SignedMailValidator.extKeyUsageError.text = There was a {2} processing the extended key usage extension. Cause: {0}.
SignedMailValidator.extKeyUsageError.summary = There was a {2} processing the extended key usage extension.
SignedMailValidator.extKeyUsageError.details = There was a {2} processing the extended key usage extension. Cause: {0}.

# cannot create certificate path (exception)
# {0} message of the underlying exception
# {1} the underlying exception
# {2} the name of the exception
SignedMailValidator.exceptionCreateCertPath.title = Certificate path validation failed
SignedMailValidator.exceptionCreateCertPath.text = Certificate path validation failed. There was a {2} creating the CertPath: {0}.
SignedMailValidator.exceptionCreateCertPath.summary = Certificate path validation failed. There was a {2} creating the CertPath: {0}.
SignedMailValidator.exceptionCreateCertPath.details = Certificate path validation failed. There was a {2} creating the CertPath: {0}.

# certificate path is invalid
SignedMailValidator.certPathInvalid.title = Certificate path invalid
SignedMailValidator.certPathInvalid.text = The certificate path is invalid.
SignedMailValidator.certPathInvalid.summary = The certificate path is invalid.
SignedMailValidator.certPathInvalid.details = The certificate path is invalid.
